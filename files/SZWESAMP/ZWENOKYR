//ZWENOKYR JOB
//*
//* This program and the accompanying materials are made available
//* under the terms of the Eclipse Public License v2.0 which
//* accompanies this distribution, and is available at
//* https://www.eclipse.org/legal/epl-v20.html
//*
//* SPDX-License-Identifier: EPL-2.0
//*
//* Copyright Contributors to the Zowe Project. 2020, 2020
//*
//*********************************************************************
//*
//* Zowe Open Source Project
//* This JCL can be used to remove key ring and certificates for Zowe
//*
//*
//* CAUTION: This is neither a JCL procedure nor a complete job.
//* Before using this JCL, you will have to make the following
//* modifications:
//*
//* 1) Add job name and job parameters to the JOB statement, to
//*    meet your system requirements.
//*
//* 2) Customize the commands in the DD statement that matches your
//*    security product so that they meet your system requirements.
//*
//* Note(s):
//*
//* 1. THE USER ID THAT RUNS THIS JOB MUST HAVE SUFFICIENT AUTHORITY
//*    TO ALTER SECURITY DEFINITIONS
//*
//* 2. This job WILL complete with return code 0.
//*    The results of each command must be verified after completion.
//*
//*******************************************************************
//*
//*      * You do NOT need to set USERNAME when running ZWEGENER.
//*      * This is used to keep some lines under the column limit.
//*
//         SET USERNAME={zowe.setup.security.users.zowe}
//*
//*********************************************************************
//         EXPORT SYMLIST=*
//*
//*********************************************************************
//*
//* EXECUTE COMMANDS FOR SELECTED SECURITY PRODUCT
//*
//RUN      EXEC PGM=IKJEFT01,REGION=0M
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD DDNAME={zowe.setup.security.product}
//*
//*********************************************************************
//*
//* RACF ONLY, customize to meet your system requirements
//*
//RACF     DD DATA,DLM=$$,SYMBOLS=JCLONLY

/* Remove permit to use SITE owned certificate's private key */
  PERMIT IRR.DIGTCERT.GENCERT CLASS(FACILITY) +
         DELETE ID({zowe.setup.security.users.zowe})

/* Remove permit to read keyring ................................... */
  PERMIT IRR.DIGTCERT.LISTRING CLASS(FACILITY) +
         DELETE ID({zowe.setup.security.users.zowe})

  SETROPTS RACLIST(FACILITY) REFRESH

/* Remove keyring profile defined on RDATALIB class ................ */
  RLIST   RDATALIB +
          &USERNAME..{zowe.setup.certificate.keyring.name}.LST ALL
  PERMIT +
    &USERNAME..{zowe.setup.certificate.keyring.name}.LST +
    CLASS(RDATALIB) DELETE +
    ID({zowe.setup.security.users.zowe})
  RDELETE RDATALIB +
          &USERNAME..{zowe.setup.certificate.keyring.name}.LST

/* Refresh to dynamically activate the changes. .................... */
  SETROPTS RACLIST(RDATALIB) REFRESH

/* Delete LABEL certificate ........................................*/
  RACDCERT DELETE(LABEL('{zowe.setup.certificate.keyring.label}')) +
           ID({zowe.setup.security.users.zowe})

/* Delete LOCALCA certificate ......................................*/
  RACDCERT DELETE(LABEL( +
           '{zowe.setup.certificate.keyring.caLabel}')) CERTAUTH

/* Delete keyring ...................................................*/
  RACDCERT DELRING({zowe.setup.certificate.keyring.name}) +
           ID({zowe.setup.security.users.zowe})

  SETROPTS RACLIST(DIGTCERT, DIGTRING) REFRESH

/* ................................................................. */
/* only the last RC is returned, this command ensures it is a 0      */
PROFILE
$$
//*
//*********************************************************************
//*
//* ACF2 ONLY, customize to meet your system requirements
//*
//ACF2     DD DATA,DLM=$$,SYMBOLS=JCLONLY
ACF

* Remove permit to use SITE owned certificate's private key
  SET RESOURCE(FAC)
  RECKEY IRR DEL(DIGTCERT.GENCERT +
  ROLE({zowe.setup.security.groups.stc}) +
  SERVICE(CONTROL) ALLOW)

* Remove permit to read keyring ....................................*/
  RECKEY IRR DEL(DIGTCERT.LISTRING +
  ROLE({zowe.setup.security.groups.stc}) +
  SERVICE(READ) ALLOW)

  F ACF2,REBUILD(FAC)

* Delete LABEL certificate ........................................*/
  DELETE {zowe.setup.security.users.zowe}.ZOWECERT

* Delete LOCALCA certificate ......................................*/
  DELETE CERTAUTH.ZOWECA

* Delete keyring ...................................................*/
  SET PROFILE(USER) DIVISION(KEYRING)
  DELETE {zowe.setup.security.users.zowe}.ZOWERING

  F ACF2,REBUILD(USR),CLASS(P),DIVISION(KEYRING)

END
$$
//*
//*********************************************************************
//*
//* Top Secret ONLY, customize to meet your system requirements
//*
//TSS      DD DATA,DLM=$$,SYMBOLS=JCLONLY

/* Remove permit to use SITE owned certificate's private key */
   TSS REVOKE({zowe.setup.security.users.zowe}) +
       IBMFAC(IRR.DIGTCERT.GENCERT) ACCESS(CONTROL)

/* Remove permit to read keyring ................................... */
   TSS REVOKE({zowe.setup.security.users.zowe}) +
       IBMFAC(IRR.DIGTCERT.LISTRING) ACCESS(READ)

/* Delete LABEL certificate ........................................*/
   TSS REM({zowe.setup.security.users.zowe}) DIGICERT(ZOWECERT)

/* Delete LOCALCA certificate ......................................*/
   TSS REM(CERTAUTH) DIGICERT(ZOWECA)

/* Delete keyring ...................................................*/
   TSS REM({zowe.setup.security.users.zowe}) KEYRING(ZOWERING)

/* ................................................................. */
/* only the last RC is returned, this command ensures it is a 0      */
PROFILE
$$
//*

